#!/bin/bash

# ----------------------------------------
# Jupyter Notebook 管理脚本
# 功能：安装、创建用户、生成配置、设置密码、启动/停止 服务、删除所有
# ----------------------------------------

# 默认参数
default_user="jpy"
default_port=8888

# 颜色输出
green()  { echo -e "\033[32m$1\033[0m"; }
yellow() { echo -e "\033[33m$1\033[0m"; }
red()    { echo -e "\033[31m$1\033[0m"; }

# 安装 Jupyter Notebook，并防止 getcwd() 错误
install_jupyter() {
  cd ~ || cd /root || cd /tmp
  green "📦 更新包列表并安装依赖..."
  apt update
  apt install -y python3-pip curl
  green "📥 升级 pip 并安装 Jupyter..."
  pip3 install --upgrade pip
  pip3 install jupyter
  green "✅ Jupyter Notebook 安装完成"
  return_to_menu
}

# 确保用户主目录存在
ensure_home() {
  local username="$1"
  local home_dir="/home/$username"
  if [[ ! -d "$home_dir" ]]; then
    mkdir -p "$home_dir"
    chown "$username:$username" "$home_dir"
  fi
}

# 创建运行用户
create_user() {
  read -p "👤 请输入运行用户（默认: $default_user）: " username
  username=${username:-$default_user}
  if id "$username" &>/dev/null; then
    yellow "⚠️ 用户 $username 已存在，跳过创建"
  else
    adduser --gecos "" --disabled-password "$username"
    green "✅ 用户 $username 创建成功"
  fi
  return_to_menu
}

# 生成配置文件
generate_config() {
  read -p "👤 请输入运行用户（默认: $default_user）: " username
  username=${username:-$default_user}
  ensure_home "$username"
  runuser -l "$username" -c "jupyter notebook --generate-config"
  green "✅ 已为 $username 生成配置文件于: /home/$username/.jupyter/jupyter_notebook_config.py"
  return_to_menu
}

# 设置登录密码
set_password() {
  read -p "👤 请输入运行用户（默认: $default_user）: " username
  username=${username:-$default_user}
  ensure_home "$username"
  runuser -l "$username" -c "jupyter notebook password"
  green "✅ 密码设置完成"
  return_to_menu
}

# 启动 Jupyter Notebook
start_jupyter() {
  read -p "👤 请输入运行用户（默认: $default_user）: " username
  username=${username:-$default_user}
  ensure_home "$username"
  read -p "🌐 请输入端口（默认: $default_port）: " port
  port=${port:-$default_port}
  local home_dir="/home/$username"
  local log_file="$home_dir/jupyter.log"
  runuser -l "$username" -c "cd ~ && nohup jupyter notebook --allow-root --ip=0.0.0.0 --port=$port > $log_file 2>&1 &"
  server_ip=$(curl -s ifconfig.me || hostname -I | awk '{print $1}')
  green "🚀 Jupyter 已启动：端口 $port"
  yellow "访问地址: http://$server_ip:$port"
  return_to_menu
}

# 停止 Jupyter Notebook
stop_jupyter() {
  pkill -f jupyter && green "🛑 Jupyter 服务已停止" || yellow "Jupyter 未运行"
  return_to_menu
}

# 删除所有：Jupyter、用户及配置（危险操作）
delete_all() {
  read -p "⚠️ 确认删除所有配置和用户？此操作不可恢复！输入 yes 确认: " confirm
  if [[ $confirm == "yes" ]]; then
    pkill -f jupyter
    deluser --remove-home "$default_user" 2>/dev/null
    pip3 uninstall -y jupyter
    green "🗑️ 已删除用户 $default_user、Jupyter 及所有配置"
  else
    yellow "取消操作"
  fi
  return_to_menu
}

# 返回主菜单
return_to_menu() {
  echo
  read -p "按 Enter 返回菜单..." _unused
  main_menu
}

# 主菜单
main_menu() {
  clear
  echo "====== Jupyter 管理脚本 ======"
  echo "1) 安装 Jupyter Notebook"
  echo "2) 创建运行用户"
  echo "3) 生成配置文件"
  echo "4) 设置登录密码"
  echo "5) 启动 Jupyter 服务"
  echo "6) 停止 Jupyter 服务"
  echo "7) 删除所有配置与用户"
  echo "0) 退出"
  echo "============================"
  read -p "请选择 [0-7]: " choice
  case "$choice" in
    1) install_jupyter ;;
    2) create_user ;;
    3) generate_config ;;
    4) set_password ;;
    5) start_jupyter ;;
    6) stop_jupyter ;;
    7) delete_all ;;
    0) exit 0 ;;
    *) red "无效选项" && return_to_menu ;;
  esac
}

# 确保以 root 运行
if [[ $EUID -ne 0 ]]; then
  red "请使用 root 权限运行此脚本"
  exit 1
fi

# 启动脚本
main_menu
